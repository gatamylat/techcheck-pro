/**
 * @module KnowledgeBase
 * @description –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π - –Ω–æ—Ä–º—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ú–∞—Å—Å–∏–≤–±—É—Ä–≥
 * @version 1.0.0
 * @dependencies ['_state', '_router']
 */

import BaseModule from './BaseModule.js';

export default class KnowledgeBase extends BaseModule {
    constructor(app) {
        super(app);
        this.name = 'knowledge-base';
        this.version = '1.0.0';
        this.dependencies = ['_state', '_router'];
        
        this.meta = {
            title: '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π',
            icon: 'üìö',
            description: '–ù–æ—Ä–º—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ú–∞—Å—Å–∏–≤–±—É—Ä–≥, —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
            navLabel: '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π',
            status: 'ready'
        };
        
        this.categories = [
            { 
                id: 'sketches',
                title: '–≠—Å–∫–∏–∑—ã –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ',
                icon: '‚úèÔ∏è',
                color: '#3b82f6'
            },
            { 
                id: 'drawings',
                title: '–†–∞–±–æ—á–∏–µ —á–µ—Ä—Ç–µ–∂–∏',
                icon: 'üìê',
                color: '#10b981'
            },
            { 
                id: 'specs',
                title: '–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏',
                icon: 'üìã',
                color: '#f59e0b'
            },
            { 
                id: 'subcontract',
                title: '–î–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è —Å—É–±–ø–æ–¥—Ä—è–¥–∞',
                icon: 'üèóÔ∏è',
                color: '#8b5cf6'
            },
            { 
                id: 'basis',
                title: '–ë–∞–∑–∏—Å –ú–µ–±–µ–ª—å—â–∏–∫',
                icon: 'üíæ',
                color: '#ec4899'
            },
            { 
                id: 'typical',
                title: '–¢–∏–ø–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è',
                icon: 'üîß',
                color: '#06b6d4'
            },
            { 
                id: 'furniture',
                title: '–§—É—Ä–Ω–∏—Ç—É—Ä–∞',
                icon: 'üî©',
                color: '#84cc16'
            },
            { 
                id: 'tech',
                title: '–í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞',
                icon: 'üîå',
                color: '#f97316'
            }
        ];
        
        this.searchQuery = '';
        this.currentCategory = null;
        this.currentArticle = null;
    }
    
    async loadData() {
        this.data = {
            articles: [
                {
                    id: 'sketch-approval',
                    category: 'sketches',
                    title: '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —ç—Å–∫–∏–∑–∞ –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è',
                    tags: ['—ç—Å–∫–∏–∑', '—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ', '–∑–∞–∫–∞–∑—á–∏–∫'],
                    content: {
                        overview: '–í—Å–µ —á–µ—Ä—Ç–µ–∂–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF. –≠—Å–∫–∏–∑—ã - —ç—Ç–æ –ø–µ—Ä–≤–∏—á–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º.',
                        sections: [
                            {
                                title: '–®—Ç–∞–º–ø —á–µ—Ä—Ç–µ–∂–∞',
                                items: [
                                    '–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
                                    '–§–∞–º–∏–ª–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è',
                                    '–ù–æ–º–µ—Ä –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑–¥–µ–ª–∏—è –∏–∑ –ü–ª–∞–Ω–§–∏–∫—Å',
                                    '–ü–æ–∑–∏—Ü–∏—è –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª–∏ –∏–ª–∏ —É–∑–ª–∞',
                                    '–ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –ª–∏—Å—Ç–∞'
                                ]
                            },
                            {
                                title: '–ü–µ—Ä–≤—ã–π –ª–∏—Å—Ç',
                                items: [
                                    '–ò–∑–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –≤–∏–¥—ã –≤ —Ü–≤–µ—Ç–µ',
                                    '–£—Å–ª–æ–≤–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
                                    '–û–ø–∏—Å–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
                                    '–õ–∏—Ü–µ–≤–∞—è —Ñ—É—Ä–Ω–∏—Ç—É—Ä–∞ –∏ –µ—ë —Ü–≤–µ—Ç',
                                    '–ü–æ–¥—Å–≤–µ—Ç–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)',
                                    '–ü–µ—Ä–µ—á–µ–Ω—å —Ç–µ—Ö–Ω–∏–∫–∏ —Å –º–æ–¥–µ–ª—è–º–∏'
                                ]
                            }
                        ],
                        important: '–ù–∞ –ø–µ—Ä–≤–æ–º –ª–∏—Å—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–º–µ—â–∞—é—Ç—Å—è –∏–∑–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –≤–∏–¥—ã –∏–∑–¥–µ–ª–∏—è –≤ —Ü–≤–µ—Ç–µ!'
                    }
                },
                {
                    id: 'main-drawings',
                    category: 'drawings',
                    title: '–û—Å–Ω–æ–≤–Ω—ã–µ —á–µ—Ä—Ç–µ–∂–∏',
                    tags: ['—á–µ—Ä—Ç–µ–∂', '–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ', '—Ü–µ—Ö'],
                    content: {
                        overview: '–ü–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑—á–∏–∫–æ–º, —Ä–∞–∑–¥–µ–ª –¥–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –¥–ª—è —Ü–µ—Ö–∞.',
                        sections: [
                            {
                                title: '–°–æ—Å—Ç–∞–≤ —á–µ—Ä—Ç–µ–∂–µ–π',
                                items: [
                                    '–í–∏–¥ —Å–ø–µ—Ä–µ–¥–∏ —Å —Ñ–∞—Å–∞–¥–∞–º–∏ –∏ –±–µ–∑',
                                    '–í–∏–¥ —Å–≤–µ—Ä—Ö—É (–ø–ª–∞–Ω, –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä–µ–∑)',
                                    '–û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—á–µ–Ω–∏—è',
                                    '–í—Å–µ –≤–∞–∂–Ω—ã–µ —É–∑–ª—ã –∫—Ä—É–ø–Ω–æ'
                                ]
                            },
                            {
                                title: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã',
                                items: [
                                    '–û–±—â–∏–µ –≥–∞–±–∞—Ä–∏—Ç—ã –∏–∑–¥–µ–ª–∏—è',
                                    '–í—ã—Å–æ—Ç—ã –º–µ–∂–¥—É –ø–æ–ª–∫–∞–º–∏',
                                    '–í—ã—Å–æ—Ç—ã –æ—Ç –ø–æ–ª–∞ –¥–æ —à—Ç–∞–Ω–≥',
                                    '–ó–∞–∑–æ—Ä—ã –º–µ–∂–¥—É –∏–∑–¥–µ–ª–∏–µ–º –∏ —Å—Ç–µ–Ω–∞–º–∏',
                                    '–ó–∞–∑–æ—Ä—ã –º–µ–∂–¥—É —Ñ–∞—Å–∞–¥–∞–º–∏ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç 4–º–º)'
                                ]
                            }
                        ],
                        important: '–í—Å–µ –≤—ã–≤–æ–¥—ã —ç–ª–µ–∫—Ç—Ä–∏–∫–∏, –≤–æ–¥—ã, –ª—é–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞–Ω–µ—Å–µ–Ω—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≤–∏–¥—ã!'
                    }
                },
                {
                    id: 'self-check',
                    category: 'drawings',
                    title: '–õ–∏—Å—Ç —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∏',
                    tags: ['–ø—Ä–æ–≤–µ—Ä–∫–∞', '—á–µ–∫-–ª–∏—Å—Ç', '–∫–æ–Ω—Ç—Ä–æ–ª—å'],
                    content: {
                        overview: '–ü–µ—Ä–µ–¥ –ø–µ—Ä–µ–¥–∞—á–µ–π —á–µ—Ä—Ç–µ–∂–µ–π –Ω–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã.',
                        sections: [
                            {
                                title: '–û—Å–Ω–æ–≤–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏',
                                items: [
                                    '–£–∫–∞–∑–∞–Ω—ã –æ—Ç–¥–µ–ª–∫–∞, —Ü–≤–µ—Ç, –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –õ–î–°–ü',
                                    '–ü–æ–¥–ø–∏—Å–∞–Ω–∞ —Ç–µ—Ö–Ω–∏–∫–∞ (–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ/–º–æ–¥–µ–ª—å)',
                                    '–û–±–æ–∑–Ω–∞—á–µ–Ω—ã —Ä—É—á–∫–∏ (–º–æ–¥–µ–ª—å –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç)',
                                    '–£–∫–∞–∑–∞–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç–ª–µ–∫—Ç—Ä–∏–∫–µ',
                                    '–£—á—Ç–µ–Ω–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ä–æ–∑–µ—Ç–æ–∫',
                                    '–ü—Ä–æ–≤–µ—Ä–µ–Ω—ã –≥–∞–±–∞—Ä–∏—Ç—ã –¥–ª—è –ø—Ä–æ–Ω–æ—Å–∞',
                                    '–£—á—Ç–µ–Ω –º–∞—Ç–µ—Ä–∏–∞–ª —Å—Ç–µ–Ω –¥–ª—è –∫—Ä–µ–ø–ª–µ–Ω–∏—è',
                                    '–û–±–æ–∑–Ω–∞—á–µ–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–∑–æ—Ä—ã',
                                    '–§–∞—Å–∞–¥—ã –≤—ã—à–µ 1950–º–º - —Å–∫—Ä—ã—Ç—ã–µ –≤—ã–ø—Ä—è–º–∏—Ç–µ–ª–∏',
                                    '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç—É—Ä—ã –æ–±–æ–∑–Ω–∞—á–µ–Ω–æ'
                                ]
                            }
                        ],
                        important: '–§–∞—Å–∞–¥—ã –≤—ã—à–µ 1950–º–º —Ç—Ä–µ–±—É—é—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∫—Ä—ã—Ç—ã—Ö –≤—ã–ø—Ä—è–º–∏—Ç–µ–ª–µ–π!'
                    }
                }
            ]
        };
        
        this.setCache(this.data);
    }
    
    renderContent() {
    if (this.currentArticle) {
        return this.renderArticle();
    }
    
    if (this.currentCategory) {
        return this.renderCategory();
    }
    
    return this.renderMain();
}
    
    renderMain() {
    const isMobile = window.innerWidth <= 767;
    return `
        <div class="knowledge-base">
            ${isMobile ? '<h1 class="gradient-text mobile-page-title">–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</h1>' : ''}
            ${this.renderSearch()}
                
                <div class="categories-grid">
                    ${this.categories.map(cat => this.renderCategoryCard(cat)).join('')}
                </div>
                
                <div class="recent-articles">
                    <h3>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç–∞—Ç—å–∏</h3>
                    <div class="articles-list">
                        ${this.getPopularArticles().map(article => 
                            this.renderArticleCard(article)
                        ).join('')}
                    </div>
                </div>
            </div>
        `;
    }
    
    renderSearch() {
        return `
            <div class="search-container">
                <input type="text" 
                       class="search-input" 
                       placeholder="–ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π..." 
                       value="${this.searchQuery}"
                       onkeyup="app.getModule('knowledge-base').search(this.value)">
                <button class="search-btn">üîç</button>
            </div>
        `;
    }
    
    renderCategoryCard(category) {
        const count = this.data.articles.filter(a => a.category === category.id).length;
        
        return `
            <div class="category-card" 
                 onclick="app.getModule('knowledge-base').openCategory('${category.id}')"
                 style="border-left-color: ${category.color};">
                <div class="category-icon" style="background: ${category.color}20;">
                    ${category.icon}
                </div>
                <h3>${category.title}</h3>
                <span class="category-count">${count} —Å—Ç–∞—Ç–µ–π</span>
            </div>
        `;
    }
    
    renderArticleCard(article) {
        const category = this.categories.find(c => c.id === article.category);
        
        return `
            <div class="article-card" 
                 onclick="app.getModule('knowledge-base').openArticle('${article.id}')">
                <div class="article-header">
                    <span class="article-category" style="color: ${category?.color}">
                        ${category?.icon} ${category?.title}
                    </span>
                </div>
                <h4>${article.title}</h4>
                <div class="article-tags">
                    ${article.tags.map(tag => 
                        `<span class="tag">#${tag}</span>`
                    ).join('')}
                </div>
            </div>
        `;
    }
    
    renderCategory() {
        const category = this.categories.find(c => c.id === this.currentCategory);
        const articles = this.data.articles.filter(a => a.category === this.currentCategory);
        
        return `
            <div class="category-page">
                <div class="breadcrumbs">
                    <span onclick="app.getModule('knowledge-base').goHome()">
                        –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
                    </span>
                    <span>‚Üí</span>
                    <span>${category.title}</span>
                </div>
                
                <div class="category-header" style="border-left-color: ${category.color};">
                    <h2>
                        <span style="color: ${category.color};">${category.icon}</span>
                        ${category.title}
                    </h2>
                </div>
                
                <div class="articles-grid">
                    ${articles.map(article => this.renderArticleCard(article)).join('')}
                </div>
            </div>
        `;
    }
    
    renderArticle() {
        const article = this.data.articles.find(a => a.id === this.currentArticle);
        if (!article) return '<p>–°—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>';
        
        const category = this.categories.find(c => c.id === article.category);
        
        return `
            <div class="article-page">
                <div class="breadcrumbs">
                    <span onclick="app.getModule('knowledge-base').goHome()">
                        –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
                    </span>
                    <span>‚Üí</span>
                    <span onclick="app.getModule('knowledge-base').openCategory('${category.id}')">
                        ${category.title}
                    </span>
                    <span>‚Üí</span>
                    <span>${article.title}</span>
                </div>
                
                <article>
                    <header class="article-header">
                        <h1>${article.title}</h1>
                        <div class="article-meta">
                            <span class="category-badge" style="background: ${category.color}20; color: ${category.color};">
                                ${category.icon} ${category.title}
                            </span>
                        </div>
                    </header>
                    
                    <div class="article-content">
                        <div class="overview">
                            ${article.content.overview}
                        </div>
                        
                        ${article.content.important ? `
                            <div class="important-block">
                                <strong>‚ö†Ô∏è –í–∞–∂–Ω–æ:</strong> ${article.content.important}
                            </div>
                        ` : ''}
                        
                        ${article.content.sections.map(section => `
                            <section>
                                <h3>${section.title}</h3>
                                <ul>
                                    ${section.items.map(item => `<li>${item}</li>`).join('')}
                                </ul>
                            </section>
                        `).join('')}
                    </div>
                    
                    <footer class="article-footer">
                        <div class="article-tags">
                            ${article.tags.map(tag => 
                                `<span class="tag" onclick="app.getModule('knowledge-base').searchByTag('${tag}')">
                                    #${tag}
                                </span>`
                            ).join('')}
                        </div>
                    </footer>
                </article>
            </div>
        `;
    }
    
    getPublicMethods() {
        return {
            search: (query) => this.search(query),
            openCategory: (id) => this.openCategory(id),
            openArticle: (id) => this.openArticle(id),
            goHome: () => this.goHome(),
            searchByTag: (tag) => this.searchByTag(tag)
        };
    }
   
    search(query) {
        this.searchQuery = query;
        this.log(`Searching: ${query}`);
        this.render();
    }
    
    openCategory(categoryId) {
        this.currentCategory = categoryId;
        this.currentArticle = null;
        this.app.router.navigate(`/knowledge-base/category/${categoryId}`);
        this.render();
    }
    
    openArticle(articleId) {
        this.currentArticle = articleId;
        this.app.router.navigate(`/knowledge-base/article/${articleId}`);
        this.render();
    }
    
    goHome() {
        this.currentCategory = null;
        this.currentArticle = null;
        this.app.router.navigate('/knowledge-base');
        this.render();
    }
    
    searchByTag(tag) {
        this.searchQuery = `#${tag}`;
        this.search(this.searchQuery);
    }
    
    getPopularArticles() {
        return this.data.articles.slice(0, 3);
    }
}
