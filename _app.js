/**
 * @module App
 * @description –Ø–¥—Ä–æ –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã TechCheck Pro
 * @version 1.0.0
 * @author TechCheck Team
 */

export default class App {
    constructor() {
        this.modules = new Map();
        this.config = null;
        this.router = null;
        this.state = null;
        this.debug = new URLSearchParams(window.location.search).has('debug');
        this.container = document.getElementById('content');
        
        // –†–µ–µ—Å—Ç—Ä –º–æ–¥—É–ª–µ–π - –ó–î–ï–°–¨ –î–û–ë–ê–í–õ–Ø–ï–ú –ù–û–í–´–ï –ú–û–î–£–õ–ò
        this.moduleRegistry = {
            // –°–∏—Å—Ç–µ–º–Ω—ã–µ –º–æ–¥—É–ª–∏ (–∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –ø–µ—Ä–≤—ã–º–∏)
            system: [
                '_config',
                '_router', 
                '_state'
            ],
            // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
            functional: [
                'knowledge-base',
                'checklist',
                'wiki',
                'stories',
                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –º–æ–¥—É–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–æ–π!
                // 'my-new-module',
            ],
            // –ë—É–¥—É—â–∏–µ –º–æ–¥—É–ª–∏ (–ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ "—Å–∫–æ—Ä–æ")
            future: [
                'statistics',
                'llm-check'
            ]
        };
        
        // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–µ–π
        this.moduleMeta = {
            'knowledge-base': {
                title: '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π',
                icon: 'üìö',
                description: '–ù–æ—Ä–º—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ú–∞—Å—Å–∏–≤–±—É—Ä–≥, —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è',
                navLabel: '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π',
                status: 'ready'
            },
            'checklist': {
                title: '–ß–µ–∫-–ª–∏—Å—Ç—ã',
                icon: '‚úì',
                description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
                navLabel: '–ß–µ–∫-–ª–∏—Å—Ç—ã',
                status: 'ready'
            },
            'wiki': {
                title: 'Wiki',
                icon: 'üìñ',
                description: '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∫–æ–º–∞–Ω–¥—ã, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, best practices',
                navLabel: 'Wiki',
                status: 'beta'
            },
            'stories': {
                title: 'Stories',
                icon: 'üí¨',
                description: '–ö–µ–π—Å—ã, –ø—Ä–∏–º–µ—Ä—ã —Ä–µ—à–µ–Ω–∏–π, –æ–±—Å—É–∂–¥–µ–Ω–∏—è',
                navLabel: 'Stories',
                status: 'beta'
            },
            'statistics': {
                title: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                icon: 'üìä',
                description: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–æ–∫ –∏ —Ç–∏–ø–æ–≤—ã—Ö –æ—à–∏–±–æ–∫',
                navLabel: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                status: 'soon'
            },
            'llm-check': {
                title: 'AI –ü—Ä–æ–≤–µ—Ä–∫–∞',
                icon: 'ü§ñ',
                description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä—Ç–µ–∂–µ–π —Å –ø–æ–º–æ—â—å—é LLM',
                navLabel: 'AI',
                status: 'soon'
            }
            // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π –¥–æ–±–∞–≤–ª—è–µ–º –∑–¥–µ—Å—å
        };
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    async init() {
        try {
            this.log('üöÄ Starting TechCheck Pro...', 'system');
            
            // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –º–æ–¥—É–ª–∏
            await this.loadSystemModules();
            
            // 2. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
            await this.loadFunctionalModules();
            
            // 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏
            await this.initializeModules();
            
            // 4. –°—Ç—Ä–æ–∏–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            this.buildNavigation();
            
            // 5. –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–æ—É—Ç–µ—Ä
            this.router.start();
            
            // 6. –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑—á–∏–∫
            this.hideLoader();
            
            this.log(`‚úÖ App started with ${this.modules.size} modules`, 'success');
            
        } catch (error) {
            this.log(`‚ùå Fatal error: ${error.message}`, 'error');
            this.showError(error.message);
        }
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
     */
    async loadSystemModules() {
        this.log('Loading system modules...', 'system');
        
        for (const moduleName of this.moduleRegistry.system) {
            try {
                const module = await import(`./${moduleName}.js`);
                const instance = new module.default(this);
                this.modules.set(moduleName, instance);
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –º–æ–¥—É–ª–∏
                if (moduleName === '_config') this.config = instance;
                if (moduleName === '_router') this.router = instance;
                if (moduleName === '_state') this.state = instance;
                
                this.log(`‚úì System module loaded: ${moduleName}`, 'system');
            } catch (error) {
                this.log(`‚úó Failed to load ${moduleName}: ${error.message}`, 'error');
                // –°–æ–∑–¥–∞—ë–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –º–æ–¥—É–ª—è
                this.createModuleStub(moduleName, 'system');
            }
        }
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
     */
    async loadFunctionalModules() {
        this.log('Loading functional modules...', 'system');
        
        const allModules = [
            ...this.moduleRegistry.functional,
            ...this.moduleRegistry.future
        ];
        
        for (const moduleName of allModules) {
            try {
                const module = await import(`./${moduleName}.js`);
                const instance = new module.default(this);
                this.modules.set(moduleName, instance);
                this.log(`‚úì Module loaded: ${moduleName}`, 'module');
            } catch (error) {
                this.log(`‚úó Module not found: ${moduleName} (stub created)`, 'warning');
                this.createModuleStub(moduleName, 'functional');
            }
        }
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –º–æ–¥—É–ª—è
     */
    createModuleStub(moduleName, type) {
        const meta = this.moduleMeta[moduleName] || {
            title: moduleName,
            icon: 'üì¶',
            description: 'Module in development',
            navLabel: moduleName,
            status: 'soon'
        };
        
        const stub = {
            name: moduleName,
            type: type,
            meta: meta,
            isStub: true,
            
            init() {
                console.log(`Stub init: ${moduleName}`);
            },
            
            render() {
                return `
                    <div style="padding: 3rem; text-align: center;">
                        <div style="font-size: 4rem; margin-bottom: 1rem;">${meta.icon}</div>
                        <h1>${meta.title}</h1>
                        <p style="color: var(--text-secondary); margin: 1rem 0;">
                            ${meta.description}
                        </p>
                        <div style="display: inline-block; padding: 0.5rem 1rem; 
                                    background: var(--bg-secondary); border-radius: 20px; 
                                    margin-top: 1rem;">
                            –ú–æ–¥—É–ª—å "${moduleName}" ${meta.status === 'soon' ? '–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ' : '–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è'}...
                        </div>
                    </div>
                `;
            }
        };
        
        this.modules.set(moduleName, stub);
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
     */
    async initializeModules() {
        this.log('Initializing modules...', 'system');
        
        for (const [name, module] of this.modules) {
            try {
                if (module.init && typeof module.init === 'function') {
                    await module.init();
                    this.log(`‚úì Initialized: ${name}`, 'module');
                }
            } catch (error) {
                this.log(`‚úó Init failed for ${name}: ${error.message}`, 'error');
            }
        }
    }
    
    /**
     * –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    buildNavigation() {
        const nav = document.getElementById('main-nav');
        if (!nav) return;
        
        nav.innerHTML = '';
        
        // –ì–ª–∞–≤–Ω–∞—è –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–≤–∞—è
        this.addNavLink(nav, '/', '–ì–ª–∞–≤–Ω–∞—è');
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
        for (const moduleName of this.moduleRegistry.functional) {
            const meta = this.moduleMeta[moduleName];
            if (meta && meta.status !== 'hidden') {
                this.addNavLink(nav, `/${moduleName}`, meta.navLabel);
            }
        }
    }
    
    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏—é
     */
    addNavLink(nav, path, label) {
        const link = document.createElement('a');
        link.className = 'nav-link';
        link.textContent = label;
        link.dataset.route = path;
        link.href = '#' + path;
        
        link.addEventListener('click', (e) => {
            e.preventDefault();
            this.router.navigate(path);
        });
        
        nav.appendChild(link);
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–¥—É–ª—è
     */
    getModule(name) {
        return this.modules.get(name);
    }
    
    /**
     * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è "–Ω–∞ –ª–µ—Ç—É"
     */
    async registerModule(name, meta = {}) {
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ä–µ–µ—Å—Ç—Ä
        if (!this.moduleRegistry.functional.includes(name)) {
            this.moduleRegistry.functional.push(name);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        this.moduleMeta[name] = {
            title: meta.title || name,
            icon: meta.icon || 'üì¶',
            description: meta.description || '',
            navLabel: meta.navLabel || name,
            status: meta.status || 'beta'
        };
        
        // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å
        try {
            const module = await import(`./${name}.js`);
            const instance = new module.default(this);
            this.modules.set(name, instance);
            
            if (instance.init) {
                await instance.init();
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            this.buildNavigation();
            
            this.log(`‚úÖ Module registered: ${name}`, 'success');
            return true;
        } catch (error) {
            this.log(`‚ùå Failed to register ${name}: ${error.message}`, 'error');
            this.createModuleStub(name, 'functional');
            return false;
        }
    }
    
    /**
     * –°–∫—Ä—ã—Ç–∏–µ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
     */
    hideLoader() {
        const loader = document.getElementById('loader');
        const app = document.getElementById('app');
        
        if (loader) {
            loader.style.opacity = '0';
            setTimeout(() => {
                loader.style.display = 'none';
                if (app) app.classList.add('loaded');
            }, 300);
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
     */
    showError(message) {
        if (this.container) {
            this.container.innerHTML = `
                <div style="padding: 3rem; text-align: center;">
                    <div style="font-size: 3rem; margin-bottom: 1rem;">‚ö†Ô∏è</div>
                    <h2>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2>
                    <p style="color: var(--text-secondary); margin-top: 1rem;">
                        ${message}
                    </p>
                    <button onclick="location.reload()" 
                            style="margin-top: 2rem; padding: 0.5rem 1.5rem; 
                                   background: var(--primary-color); color: white; 
                                   border: none; border-radius: var(--radius); cursor: pointer;">
                        –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
                    </button>
                </div>
            `;
        }
    }
    
    /**
     * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä
     */
    log(message, type = 'info') {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∏ —Ü–≤–µ—Ç
        const styles = {
            'system': { emoji: '‚öôÔ∏è', color: '#6366f1' },
            'module': { emoji: 'üì¶', color: '#3b82f6' },
            'success': { emoji: '‚úÖ', color: '#10b981' },
            'warning': { emoji: '‚ö†Ô∏è', color: '#f59e0b' },
            'error': { emoji: '‚ùå', color: '#ef4444' },
            'info': { emoji: 'üìù', color: '#64748b' }
        };
        
        const style = styles[type] || styles.info;
        
        // –ö–æ–Ω—Å–æ–ª—å
        console.log(
            `%c${style.emoji} ${message}`,
            `color: ${style.color}; font-weight: ${type === 'error' ? 'bold' : 'normal'}`
        );
        
        // Debug –ø–∞–Ω–µ–ª—å
        if (this.debug) {
            this.logToDebugPanel(message, type);
        }
    }
    
    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ debug –ø–∞–Ω–µ–ª—å
     */
    logToDebugPanel(message, type) {
        const panel = document.getElementById('debug-logs');
        if (!panel) return;
        
        const entry = document.createElement('div');
        entry.className = 'debug-log';
        entry.style.color = type === 'error' ? '#ef4444' : 
                           type === 'warning' ? '#f59e0b' : 
                           type === 'success' ? '#10b981' : '#94a3b8';
        entry.textContent = `[${new Date().toLocaleTimeString()}] ${message}`;
        
        panel.insertBefore(entry, panel.firstChild);
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        while (panel.children.length > 50) {
            panel.removeChild(panel.lastChild);
        }
    }
}