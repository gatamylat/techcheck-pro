/**
 * @module Router
 * @description –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏
 * @version 1.0.0
 */

export default class Router {
    constructor(app) {
        this.app = app;
        this.routes = new Map();
        this.currentRoute = null;
        this.history = [];
        
        // –ë–∞–∑–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
        this.routes.set('/', () => this.renderHome());
        this.routes.set('/404', () => this.render404());
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
     */
    init() {
        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ö–µ—à–∞
        window.addEventListener('hashchange', () => this.handleRoute());
        window.addEventListener('popstate', () => this.handleRoute());
        
        this.app.log('Router initialized', 'system');
    }
    
    /**
     * –ó–∞–ø—É—Å–∫ —Ä–æ—É—Ç–µ—Ä–∞
     */
    start() {
        this.handleRoute();
    }
    
    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
     */
    add(path, handler) {
        this.routes.set(path, handler);
        this.app.log(`Route registered: ${path}`, 'system');
    }
    
    /**
     * –£–¥–∞–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
     */
    remove(path) {
        this.routes.delete(path);
    }
    
    /**
     * –ù–∞–≤–∏–≥–∞—Ü–∏—è
     */
    navigate(path, data = {}) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        if (this.currentRoute) {
            this.history.push(this.currentRoute);
        }
        
        // –ú–µ–Ω—è–µ–º URL
        window.location.hash = path;
        
        // –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ
        this.routeData = data;
        
        this.app.log(`Navigate to: ${path}`, 'module');
    }
    
    /**
     * –ù–∞–∑–∞–¥
     */
    back() {
        if (this.history.length > 0) {
            const previous = this.history.pop();
            this.navigate(previous);
        } else {
            this.navigate('/');
        }
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞
     */
    handleRoute() {
        const hash = window.location.hash.slice(1) || '/';
        this.currentRoute = hash;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é
        this.updateNavigation(hash);
        
        // –ò—â–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        const handler = this.routes.get(hash);
        
        if (handler) {
            // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            const content = handler(this.routeData);
            this.render(content);
        } else {
            // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –º–æ–¥—É–ª—å
            const moduleName = hash.slice(1).split('/')[0];
            const module = this.app.getModule(moduleName);
            
            if (module) {
                const content = module.render ? module.render() : 'Module has no render method';
                this.render(content);
            } else {
                // 404
                this.navigate('/404');
            }
        }
        
        // –°–∫—Ä–æ–ª–ª–∏–º –≤–≤–µ—Ä—Ö
        window.scrollTo(0, 0);
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    updateNavigation(path) {
        document.querySelectorAll('.nav-link').forEach(link => {
            const linkPath = link.dataset.route || link.getAttribute('href')?.slice(1);
            link.classList.toggle('active', linkPath === path);
        });
    }
    
    /**
     * –†–µ–Ω–¥–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞
     */
    render(content) {
        const container = document.getElementById('content');
        if (!container) return;
        
        // –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ - –≤—Å—Ç–∞–≤–ª—è–µ–º HTML
        if (typeof content === 'string') {
            container.innerHTML = content;
        } 
        // –ï—Å–ª–∏ —ç—Ç–æ Promise - –∂–¥—ë–º
        else if (content instanceof Promise) {
            container.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>';
            content.then(html => {
                container.innerHTML = html;
            });
        }
        // –ï—Å–ª–∏ —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è - –≤—ã–∑—ã–≤–∞–µ–º
        else if (typeof content === 'function') {
            container.innerHTML = content();
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        this.initInteractiveElements(container);
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     */
    initInteractiveElements(container) {
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Å—ã–ª–∫–∏ —Å data-route
        container.querySelectorAll('[data-route]').forEach(el => {
            el.addEventListener('click', (e) => {
                e.preventDefault();
                this.navigate(el.dataset.route);
            });
        });
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å data-action
        container.querySelectorAll('[data-action]').forEach(el => {
            el.addEventListener('click', (e) => {
                e.preventDefault();
                const [moduleName, methodName] = el.dataset.action.split('.');
                const module = this.app.getModule(moduleName);
                if (module && module[methodName]) {
                    module[methodName](el.dataset);
                }
            });
        });
    }
    
    /**
     * –†–µ–Ω–¥–µ—Ä –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    renderHome() {
        return `
            <div class="home-container">
                <!-- Hero –±–ª–æ–∫ -->
                <section class="hero">
                    <h1>–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –±—ã—Å—Ç—Ä–æ –∏ —Ç–æ—á–Ω–æ</h1>
                    <p>–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –ú–∞—Å—Å–∏–≤–±—É—Ä–≥ ‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —á–µ–∫-–ª–∏—Å—Ç—ã ‚Ä¢ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</p>
                    <div class="hero-actions">
                        <button class="btn btn-primary" onclick="app.router.navigate('/checklist')">
                            üöÄ –ù–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É
                        </button>
                        <button class="btn btn-secondary" onclick="app.router.navigate('/knowledge-base')">
                            üìñ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
                        </button>
                    </div>
                </section>

                <!-- –û—Å–Ω–æ–≤–Ω–∞—è —Å–µ—Ç–∫–∞ -->
                <div class="main-grid">
                    <!-- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è - –±–æ–ª—å—à–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ -->
                    <div class="docs-card" onclick="app.router.navigate('/documents')">
                        <h2>üìã –°–æ—Å—Ç–∞–≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏</h2>
                        <p>7 —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏</p>
                    </div>

                    <!-- –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π -->
                    <div class="module-card" onclick="app.router.navigate('/knowledge-base')">
                        <span class="module-status status-ready">–ì–æ—Ç–æ–≤–æ</span>
                        <div class="module-header">
                            <div class="module-icon">üìö</div>
                            <div class="module-info">
                                <h3>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</h3>
                                <p>–ù–æ—Ä–º—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –ì–û–°–¢ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã</p>
                            </div>
                        </div>
                    </div>

                    <!-- –ß–µ–∫-–ª–∏—Å—Ç—ã -->
                    <div class="module-card" onclick="app.router.navigate('/checklist')">
                        <span class="module-status status-ready">–ì–æ—Ç–æ–≤–æ</span>
                        <div class="module-header">
                            <div class="module-icon">‚úì</div>
                            <div class="module-info">
                                <h3>–ß–µ–∫-–ª–∏—Å—Ç—ã</h3>
                                <p>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ -->
                <div class="special-modules">
                    <!-- Wiki -->
                    <div class="module-card" onclick="app.router.navigate('/wiki')">
                        <span class="module-status status-beta">Beta</span>
                        <div class="module-header">
                            <div class="module-icon">üìñ</div>
                            <div class="module-info">
                                <h3>Wiki</h3>
                                <p>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∫–æ–º–∞–Ω–¥—ã</p>
                            </div>
                        </div>
                    </div>

                    <!-- Stories -->
                    <div class="module-card" onclick="app.router.navigate('/stories')">
                        <span class="module-status status-beta">Beta</span>
                        <div class="module-header">
                            <div class="module-icon">üí¨</div>
                            <div class="module-info">
                                <h3>Stories</h3>
                                <p>–ö–µ–π—Å—ã –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è</p>
                            </div>
                        </div>
                    </div>

                    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                    <div class="special-card" onclick="app.router.navigate('/statistics')">
                        <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                        <p>–°–∫–æ—Ä–æ</p>
                    </div>

                    <!-- AI –ü—Ä–æ–≤–µ—Ä–∫–∞ -->
                    <div class="special-card" onclick="app.router.navigate('/llm-check')">
                        <h3>ü§ñ AI –ü—Ä–æ–≤–µ—Ä–∫–∞</h3>
                        <p>–°–∫–æ—Ä–æ</p>
                    </div>
                </div>
                
                <style>
                    .home-container {
                        display: flex;
                        flex-direction: column;
                        gap: 32px;
                    }

                    .hero {
                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                        border-radius: 24px;
                        padding: 48px;
                        text-align: center;
                        color: white;
                        position: relative;
                        overflow: hidden;
                    }

                    .hero h1 {
                        font-size: 32px;
                        font-weight: 700;
                        margin-bottom: 12px;
                    }

                    .hero p {
                        font-size: 18px;
                        opacity: 0.95;
                        margin-bottom: 24px;
                    }

                    .hero-actions {
                        display: flex;
                        gap: 12px;
                        justify-content: center;
                    }

                    .btn {
                        padding: 12px 24px;
                        border: none;
                        border-radius: 10px;
                        font-size: 16px;
                        font-weight: 600;
                        cursor: pointer;
                        transition: all 0.2s;
                    }

                    .btn-primary {
                        background: white;
                        color: var(--text-primary);
                    }

                    .btn-primary:hover {
                        transform: translateY(-2px);
                        box-shadow: 0 8px 20px rgba(0,0,0,0.15);
                    }

                    .btn-secondary {
                        background: rgba(255,255,255,0.2);
                        color: white;
                    }

                    .main-grid {
                        display: grid;
                        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                        gap: 16px;
                    }

                    .docs-card {
                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                        border-radius: 20px;
                        padding: 32px;
                        color: white;
                        cursor: pointer;
                        transition: all 0.3s;
                        display: flex;
                        flex-direction: column;
                        align-items: center;
                        text-align: center;
                        min-height: 200px;
                        justify-content: center;
                    }

                    .docs-card:hover {
                        transform: translateY(-4px);
                        box-shadow: 0 12px 24px rgba(102, 126, 234, 0.4);
                    }

                    .module-card {
                        background: white;
                        border-radius: 20px;
                        padding: 24px;
                        cursor: pointer;
                        transition: all 0.3s;
                        border: 1px solid var(--border-color);
                        position: relative;
                    }

                    .module-card:hover {
                        transform: translateY(-4px);
                        box-shadow: var(--shadow-lg);
                    }

                    .module-header {
                        display: flex;
                        align-items: flex-start;
                        gap: 16px;
                    }

                    .module-icon {
                        width: 48px;
                        height: 48px;
                        background: var(--bg-secondary);
                        border-radius: 12px;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        font-size: 24px;
                    }

                    .module-status {
                        position: absolute;
                        top: 16px;
                        right: 16px;
                        padding: 4px 10px;
                        border-radius: 20px;
                        font-size: 12px;
                        font-weight: 600;
                    }

                    .status-ready {
                        background: var(--success-light);
                        color: #059669;
                    }

                    .status-beta {
                        background: var(--warning-light);
                        color: #d97706;
                    }

                    .special-modules {
                        display: grid;
                        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                        gap: 16px;
                    }

                    .special-card {
                        background: var(--bg-dark);
                        color: white;
                        border-radius: 20px;
                        padding: 24px;
                        cursor: pointer;
                        transition: all 0.3s;
                    }

                    .special-card:hover {
                        transform: translateY(-4px);
                        box-shadow: 0 12px 24px rgba(30, 41, 59, 0.3);
                    }

                    @media (max-width: 768px) {
                        .home-container {
                            gap: 16px;
                        }

                        .hero {
                            padding: 32px 20px;
                            border-radius: 20px;
                        }

                        .hero h1 {
                            font-size: 24px;
                        }

                        .hero-actions {
                            flex-direction: column;
                        }

                        .btn {
                            width: 100%;
                            justify-content: center;
                        }

                        .main-grid,
                        .special-modules {
                            grid-template-columns: 1fr;
                        }
                    }
                </style>
            </div>
        `;
    }
    
    /**
     * Hero —Å–µ–∫—Ü–∏—è
     */
    renderHero() {
        // –£–¥–∞–ª—è–µ–º —ç—Ç–æ—Ç –º–µ—Ç–æ–¥, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å –≤—Å–µ –≤ renderHome()
        return '';
    }
    
    /**
     * –ë–ª–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
     */
    renderDocuments() {
        // –£–¥–∞–ª—è–µ–º —ç—Ç–æ—Ç –º–µ—Ç–æ–¥, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å –≤—Å–µ –≤ renderHome()
        return '';
    }
    
    /**
     * –ë–ª–æ–∫ –º–æ–¥—É–ª–µ–π
     */
    renderModules(modules) {
        // –£–¥–∞–ª—è–µ–º —ç—Ç–æ—Ç –º–µ—Ç–æ–¥, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å –≤—Å–µ –≤ renderHome()
        return '';
    }
    
    /**
     * –ö–∞—Ä—Ç–æ—á–∫–∞ –º–æ–¥—É–ª—è
     */
    renderModuleCard(moduleInfo) {
        // –£–¥–∞–ª—è–µ–º —ç—Ç–æ—Ç –º–µ—Ç–æ–¥, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å –≤—Å–µ –≤ renderHome()
        return '';
    }
    
    /**
     * 404 —Å—Ç—Ä–∞–Ω–∏—Ü–∞
     */
    render404() {
        return `
            <div class="error-page">
                <h1>404</h1>
                <p>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>
                <button data-route="/" class="btn btn-primary">
                    –ù–∞ –≥–ª–∞–≤–Ω—É—é
                </button>
            </div>
        `;
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ URL
     */
    getParams() {
        const hash = window.location.hash.slice(1);
        const [path, query] = hash.split('?');
        const params = new URLSearchParams(query || '');
        
        return {
            path,
            params: Object.fromEntries(params)
        };
    }
}
