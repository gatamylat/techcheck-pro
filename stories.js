/**
 * @module Stories
 * @description –ö–µ–π—Å—ã, –ø—Ä–∏–º–µ—Ä—ã —Ä–µ—à–µ–Ω–∏–π, –æ–±—Å—É–∂–¥–µ–Ω–∏—è
 * @version 1.0.0
 * @dependencies ['_state', '_router']
 */

import BaseModule from './BaseModule.js';

export default class Stories extends BaseModule {
    constructor(app) {
        super(app);
        this.name = 'stories';
        this.version = '1.0.0';
        this.dependencies = ['_state', '_router'];
        
        this.meta = {
            title: 'Stories',
            icon: 'üí¨',
            description: '–ö–µ–π—Å—ã, –ø—Ä–∏–º–µ—Ä—ã —Ä–µ—à–µ–Ω–∏–π, –æ–±—Å—É–∂–¥–µ–Ω–∏—è',
            navLabel: 'Stories',
            status: 'beta'
        };
    }
    
    async loadData() {
        // –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è Stories
        this.data = {
            stories: [
                {
                    id: 1,
                    title: '–£—Å–ø–µ—à–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–∂–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞',
                    author: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
                    avatar: 'üë§',
                    date: '2 –¥–Ω—è –Ω–∞–∑–∞–¥',
                    category: '–ö–µ–π—Å',
                    content: '–î–µ–ª—é—Å—å –æ–ø—ã—Ç–æ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫—É—Ö–Ω–∏-–≥–æ—Å—Ç–∏–Ω–æ–π –ø–ª–æ—â–∞–¥—å—é 45–º¬≤. –û—Å–Ω–æ–≤–Ω—ã–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –±—ã–ª–∏ —Å...',
                    likes: 24,
                    comments: 8,
                    image: null,
                    tags: ['–∫—É—Ö–Ω—è', '–ø—Ä–æ–≤–µ—Ä–∫–∞', '–æ–ø—ã—Ç']
                },
                {
                    id: 2,
                    title: '–õ–∞–π—Ñ—Ö–∞–∫: –±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π',
                    author: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
                    avatar: 'üë©',
                    date: '1 –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥',
                    category: '–°–æ–≤–µ—Ç',
                    content: '–ù–∞—à–ª–∞ —Å–ø–æ—Å–æ–± –∫–∞–∫ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π –≤ 2 —Ä–∞–∑–∞. –ò—Å–ø–æ–ª—å–∑—É—é –º–∞–∫—Ä–æ—Å –∫–æ—Ç–æ—Ä—ã–π...',
                    likes: 45,
                    comments: 12,
                    image: null,
                    tags: ['—Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è', '–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è', '—Å–æ–≤–µ—Ç']
                },
                {
                    id: 3,
                    title: '–ü—Ä–æ–±–ª–µ–º–∞ —Å —Ñ–∞—Å–∞–¥–∞–º–∏ –≤—ã—à–µ 1950–º–º',
                    author: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤',
                    avatar: 'üë®',
                    date: '3 –Ω–µ–¥–µ–ª–∏ –Ω–∞–∑–∞–¥',
                    category: '–í–æ–ø—Ä–æ—Å',
                    content: '–°—Ç–æ–ª–∫–Ω—É–ª—Å—è —Å –ø—Ä–æ–±–ª–µ–º–æ–π –ø—Ä–∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—ã—Å–æ–∫–∏—Ö —Ñ–∞—Å–∞–¥–æ–≤. –ó–∞–±—ã–ª –ø—Ä–æ –≤—ã–ø—Ä—è–º–∏—Ç–µ–ª–∏ –∏...',
                    likes: 15,
                    comments: 23,
                    image: null,
                    tags: ['—Ñ–∞—Å–∞–¥—ã', '–ø—Ä–æ–±–ª–µ–º–∞', '—Ä–µ—à–µ–Ω–∏–µ']
                }
            ],
            
            categories: [
                { id: 'case', name: '–ö–µ–π—Å—ã', count: 12 },
                { id: 'tip', name: '–°–æ–≤–µ—Ç—ã', count: 28 },
                { id: 'question', name: '–í–æ–ø—Ä–æ—Å—ã', count: 15 },
                { id: 'discussion', name: '–û–±—Å—É–∂–¥–µ–Ω–∏—è', count: 7 }
            ]
        };
        
        this.setCache(this.data);
    }
    
    renderContent() {
        return `
            <div class="stories-container">
                <div class="stories-header">
                    <h1>${this.meta.icon} ${this.meta.title}</h1>
                    <p>${this.meta.description}</p>
                </div>
                
                <div class="stories-toolbar" style="display: flex; gap: 1rem; margin: 2rem 0; align-items: center;">
                    <button class="btn btn-primary" onclick="app.getModule('stories').createStory()">
                        ‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å
                    </button>
                    
                    <div class="stories-filters" style="display: flex; gap: 0.5rem; margin-left: auto;">
                        ${this.data.categories.map(cat => `
                            <button class="tab" style="padding: 0.5rem 1rem; background: var(--bg-secondary); 
                                    border: none; border-radius: var(--radius); cursor: pointer;">
                                ${cat.name} (${cat.count})
                            </button>
                        `).join('')}
                    </div>
                </div>
                
                <div class="stories-feed">
                    ${this.data.stories.map(story => this.renderStory(story)).join('')}
                </div>
                
                <div style="text-align: center; padding: 2rem;">
                    <button class="btn btn-secondary">
                        –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë
                    </button>
                </div>
            </div>
        `;
    }
    
    renderStory(story) {
        return `
            <article class="story-card card" style="margin-bottom: 1.5rem;">
                <div class="story-header" style="display: flex; align-items: center; gap: 1rem; margin-bottom: 1rem;">
                    <div class="story-avatar" style="width: 40px; height: 40px; background: var(--bg-secondary); 
                         border-radius: 50%; display: flex; align-items: center; justify-content: center; 
                         font-size: 1.5rem;">
                        ${story.avatar}
                    </div>
                    <div>
                        <div style="font-weight: 600;">${story.author}</div>
                        <div style="font-size: 0.875rem; color: var(--text-secondary);">
                            ${story.date} ‚Ä¢ ${story.category}
                        </div>
                    </div>
                </div>
                
                <div class="story-content">
                    <h3 style="margin-bottom: 1rem;">${story.title}</h3>
                    <p style="color: var(--text-secondary); line-height: 1.6;">
                        ${story.content}
                    </p>
                    
                    <div class="story-tags" style="display: flex; gap: 0.5rem; margin-top: 1rem;">
                        ${story.tags.map(tag => `
                            <span style="padding: 0.25rem 0.75rem; background: var(--bg-secondary); 
                                  border-radius: var(--radius-full); font-size: 0.875rem;">
                                #${tag}
                            </span>
                        `).join('')}
                    </div>
                </div>
                
                <div class="story-actions" style="display: flex; gap: 1rem; margin-top: 1.5rem; 
                     padding-top: 1rem; border-top: 1px solid var(--border-color);">
                    <button class="story-action" style="display: flex; align-items: center; gap: 0.5rem; 
                            background: none; border: none; cursor: pointer; color: var(--text-secondary);"
                            onclick="app.getModule('stories').likeStory(${story.id})">
                        ‚ù§Ô∏è ${story.likes}
                    </button>
                    <button class="story-action" style="display: flex; align-items: center; gap: 0.5rem; 
                            background: none; border: none; cursor: pointer; color: var(--text-secondary);"
                            onclick="app.getModule('stories').openComments(${story.id})">
                        üí¨ ${story.comments}
                    </button>
                    <button class="story-action" style="display: flex; align-items: center; gap: 0.5rem; 
                            background: none; border: none; cursor: pointer; color: var(--text-secondary); 
                            margin-left: auto;">
                        üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                    </button>
                </div>
            </article>
        `;
    }
    
    getPublicMethods() {
        return {
            createStory: () => this.createStory(),
            likeStory: (id) => this.likeStory(id),
            openComments: (id) => this.openComments(id)
        };
    }
    
    createStory() {
        this.log('Creating new story...');
        alert('–°–æ–∑–¥–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–π –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
    }
    
    likeStory(id) {
        this.log(`Liked story ${id}`);
        const story = this.data.stories.find(s => s.id === id);
        if (story) {
            story.likes++;
            this.render();
        }
    }
    
    openComments(id) {
        this.log(`Opening comments for story ${id}`);
        alert('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
    }
    
    render() {
        const container = document.getElementById('content');
        if (container) {
            container.innerHTML = this.renderContent();
        }
    }
}
