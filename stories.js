/**
 * @module Stories
 * @description Stories –∫–∞—Ä—É—Å–µ–ª—å –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
 * @version 3.0.0 - COMPLETELY FIXED
 * @dependencies ['_state', '_router']
 */

import BaseModule from './BaseModule.js';

export default class Stories extends BaseModule {
    constructor(app) {
        super(app);
        this.name = 'stories';
        this.version = '3.0.0';
        this.dependencies = ['_state', '_router'];
        
        this.meta = {
            title: 'Stories',
            icon: 'üí¨',
            description: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ Stories –∏ –º–æ–¥—É–ª—è–º–∏',
            navLabel: 'Stories',
            status: 'ready'
        };
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞—Ä—É—Å–µ–ª–∏
        this.currentSlide = 0;
        this.totalSlides = 5;
        this.autoPlayInterval = null;
        this.autoPlayEnabled = false; // –û–¢–ö–õ–Æ–ß–ï–ù–û!
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞–Ω–µ–ª–∏
        this.isExpanded = false;
        this.isDragging = false;
        this.startY = 0;
        this.startTop = 380;
        this.currentTop = 380;
        this.expandedTop = 40;
        this.collapsedTop = 380;
        this.threshold = 230;
        
        // DOM —ç–ª–µ–º–µ–Ω—Ç—ã
        this.elements = {};
        
        // –í–ê–ñ–ù–û: –§–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        this.isInitialized = false;
    }
    
    async init() {
        await super.init();
        this.initDOMElements();
        // –ù–ï –≤—ã–∑—ã–≤–∞–µ–º initHomePage –∑–¥–µ—Å—å - —Ä–æ—É—Ç–µ—Ä —Å–¥–µ–ª–∞–µ—Ç —ç—Ç–æ —Å–∞–º!
    }
    
    initDOMElements() {
        this.elements = {
            homeContainer: document.getElementById('home-container'),
            desktopHomeContainer: document.getElementById('desktop-home-container'),
            mainHeader: document.getElementById('main-header'),
            mainContent: document.getElementById('content'),
            mainFooter: document.getElementById('main-footer'),
            homeHeader: document.getElementById('homeHeader'),
            storiesHero: document.getElementById('storiesHero'),
            storiesCarousel: document.getElementById('storiesCarousel'),
            carouselIndicators: document.getElementById('carouselIndicators'),
            mainContentPanel: document.getElementById('mainContent'),
            homeModules: document.getElementById('homeModules'),
            searchFab: document.getElementById('searchFab')
        };
    }
    
    async loadData() {
        // Stories —Å–ª–∞–π–¥—ã
        this.data = {
            slides: [
                {
                    id: 1,
                    title: 'TechCheck Pro',
                    subtitle: '–°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
                    gradient: 'rainbow',
                    action: null
                },
                {
                    id: 2,
                    title: '–ù–æ–≤–æ—Å—Ç–∏',
                    subtitle: '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã',
                    gradient: 'purple',
                    action: 'news'
                },
                {
                    id: 3,
                    title: '–°–æ–≤–µ—Ç –¥–Ω—è',
                    subtitle: '–ü–æ–ª–µ–∑–Ω—ã–µ –ª–∞–π—Ñ—Ö–∞–∫–∏',
                    gradient: 'pink',
                    action: 'tips'
                },
                {
                    id: 4,
                    title: '127',
                    subtitle: '–ü—Ä–æ–≤–µ—Ä–æ–∫ –∑–∞ –Ω–µ–¥–µ–ª—é',
                    gradient: 'blue',
                    action: 'stats'
                },
                {
                    id: 5,
                    title: '–ö–æ–º–∞–Ω–¥–∞',
                    subtitle: '–õ—É—á—à–∏–µ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–µ',
                    gradient: 'green',
                    action: 'team'
                }
            ]
        };
        
        this.totalSlides = this.data.slides.length;
        this.setCache(this.data);
    }
    
    initHomePage() {
        // –ó–ê–©–ò–¢–ê –û–¢ –ü–û–í–¢–û–†–ù–û–ô –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò
        if (this.isInitialized && window.innerWidth < 768) {
            this.log('Home page already initialized, skipping...', 'info');
            return;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º DOM —ç–ª–µ–º–µ–Ω—Ç—ã
        this.initDOMElements();
        
        const isMobile = window.innerWidth < 768;
        
        if (isMobile) {
            // –°–∫—Ä—ã–≤–∞–µ–º –¥–µ—Å–∫—Ç–æ–ø–Ω—É—é –≤–µ—Ä—Å–∏—é
            if (this.elements.desktopHomeContainer) {
                this.elements.desktopHomeContainer.classList.add('hidden');
            }
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
            if (this.elements.homeContainer) {
                this.elements.homeContainer.classList.remove('hidden');
            }
            
            // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —Å–ª–∞–π–¥–æ–≤
            this.injectSlideStyles();
            
            // –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–æ Stories
            this.renderStoriesSlides();
            this.renderIndicators();
            this.renderHomeModules();
            this.initCarouselEvents();
            this.initPanelDragging();
            this.initSearchButton();
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥
            this.currentSlide = 0;
            this.goToSlide(0);
            
            this.isInitialized = true;
            this.log('Mobile home page initialized with Stories', 'success');
        } else {
            // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
            if (this.elements.homeContainer) {
                this.elements.homeContainer.classList.add('hidden');
            }
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Å–∫—Ç–æ–ø–Ω—É—é –≤–µ—Ä—Å–∏—é
            if (this.elements.desktopHomeContainer) {
                this.elements.desktopHomeContainer.classList.remove('hidden');
            }
            
            // –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è
            this.renderDesktopHome();
            this.isInitialized = false; // –î–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ –º–æ–∂–µ–º –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å
            this.log('Desktop home page initialized', 'success');
        }
        
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        this.handleResize();
    }
    
    /**
     * –ù–û–í–´–ô –ú–ï–¢–û–î: –í–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ–ª—ã—Ö —Å–ª–∞–π–¥–æ–≤
     */
    injectSlideStyles() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –ª–∏ —É–∂–µ —Å—Ç–∏–ª–∏
        if (document.getElementById('stories-slide-fix')) return;
        
        const style = document.createElement('style');
        style.id = 'stories-slide-fix';
        style.innerHTML = `
            /* –§–ò–ö–°: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤ */
            .stories-carousel {
                position: relative;
                width: 100%;
                height: 100%;
            }
            
            .story-slide {
                position: relative !important;
                width: 100% !important;
                height: 100% !important;
                flex-shrink: 0 !important;
            }
            
            /* –§–ò–ö–°: –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –≤–∏–¥–Ω—ã */
            .story-gradient-rainbow {
                background: linear-gradient(135deg, 
                    #FF006E 0%, 
                    #8338EC 20%, 
                    #3A86FF 40%, 
                    #06FFB4 60%, 
                    #FFBE0B 80%, 
                    #FB5607 100%) !important;
                background-size: 400% 400% !important;
            }
            
            .story-gradient-purple {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
            }
            
            .story-gradient-pink {
                background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%) !important;
            }
            
            .story-gradient-blue {
                background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%) !important;
            }
            
            .story-gradient-green {
                background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%) !important;
            }
        `;
        document.head.appendChild(style);
        this.log('Injected slide fix styles', 'success');
    }
    
    renderStoriesSlides() {
        if (!this.elements.storiesCarousel) {
            this.log('Stories carousel element not found', 'error');
            return;
        }
        
        // –û—á–∏—â–∞–µ–º –∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º
        this.elements.storiesCarousel.innerHTML = '';
        
        // –°–æ–∑–¥–∞–µ–º —Å–ª–∞–π–¥—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫–ª–∞—Å—Å–∞–º–∏
        const slidesHTML = this.data.slides.map((slide, index) => {
            // –í–ê–ñ–ù–û: –î–æ–±–∞–≤–ª—è–µ–º data-–∞—Ç—Ä–∏–±—É—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            return `
                <div class="story-slide story-gradient-${slide.gradient}" 
                     data-slide-index="${index}"
                     data-slide-gradient="${slide.gradient}"
                     onclick="app.getModule('stories').openStory(${index})">
                    <h1 class="story-title">${slide.title}</h1>
                    <p class="story-subtitle">${slide.subtitle}</p>
                </div>
            `;
        }).join('');
        
        this.elements.storiesCarousel.innerHTML = slidesHTML;
        
        // –°–±—Ä–æ—Å –ø–æ–∑–∏—Ü–∏–∏
        this.elements.storiesCarousel.style.transform = 'translateX(0)';
        this.currentSlide = 0;
        
        this.log(`Rendered ${this.totalSlides} story slides`, 'success');
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–∞–π–¥–æ–≤
        const renderedSlides = this.elements.storiesCarousel.querySelectorAll('.story-slide');
        this.log(`Actual slides in DOM: ${renderedSlides.length}`, 'info');
    }
    
    renderIndicators() {
        if (!this.elements.carouselIndicators) {
            this.log('Carousel indicators element not found', 'warning');
            return;
        }
        
        this.elements.carouselIndicators.innerHTML = this.data.slides.map((_, index) => `
            <button class="carousel-indicator ${index === 0 ? 'active' : ''}" 
                    data-indicator-index="${index}"
                    onclick="app.getModule('stories').goToSlide(${index})"></button>
        `).join('');
    }
    
    renderHomeModules() {
        if (!this.elements.homeModules) return;
        
        const modules = [
            { id: 'knowledge-base', icon: 'üìö', title: '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π', desc: '–ì–û–°–¢ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã' },
            { id: 'checklist', icon: '‚úì', title: '–ß–µ–∫-–ª–∏—Å—Ç—ã', desc: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤' },
            { id: 'documents', icon: 'üìã', title: '–î–æ–∫—É–º–µ–Ω—Ç—ã', desc: '–°–æ—Å—Ç–∞–≤ –ö–ë' },
            { id: 'wiki', icon: 'üìñ', title: 'Wiki', desc: '–ë–∞–∑–∞ –∫–æ–º–∞–Ω–¥—ã', status: 'beta' }
        ];
        
        const futureModules = [
            { icon: 'üìä', title: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', desc: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–æ–∫', date: 'Q2 2025' },
            { icon: 'ü§ñ', title: 'AI –ü—Ä–æ–≤–µ—Ä–∫–∞', desc: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑', date: 'Q3 2025' }
        ];
        
        this.elements.homeModules.innerHTML = `
            <!-- –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ -->
            <div class="home-modules">
                <div class="grid grid-2">
                    ${modules.map(module => `
                        <div class="module-card" onclick="window.location.hash = '/${module.id}'">
                            ${module.status ? `<span class="module-status status-${module.status}">Beta</span>` : ''}
                            <div class="module-header">
                                <div class="module-icon">${module.icon}</div>
                                <div class="module-info">
                                    <h3>${module.title}</h3>
                                    <p>${module.desc}</p>
                                </div>
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
            
            <!-- –ë—É–¥—É—â–∏–µ –º–æ–¥—É–ª–∏ -->
            <section class="future-section">
                <h2>–°–∫–æ—Ä–æ</h2>
                <div class="future-modules">
                    ${futureModules.map(module => `
                        <div class="future-card">
                            <span class="future-badge">${module.date}</span>
                            <div class="future-icon">${module.icon}</div>
                            <div class="future-title">${module.title}</div>
                            <div class="future-desc">${module.desc}</div>
                        </div>
                    `).join('')}
                </div>
            </section>
        `;
    }
    
    /**
     * –†–µ–Ω–¥–µ—Ä –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    renderDesktopHome() {
        if (!this.elements.desktopHomeContainer) {
            this.log('Desktop home container not found', 'warning');
            return;
        }
        
        // –û—á–∏—â–∞–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        if (this.elements.homeContainer) {
            this.elements.homeContainer.classList.add('hidden');
        }
        
        this.elements.desktopHomeContainer.innerHTML = `
            <!-- Hero –±–ª–æ–∫ -->
            <div class="desktop-hero">
                <div class="desktop-hero-content">
                    <h1 class="gradient-text">–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –±—ã—Å—Ç—Ä–æ –∏ —Ç–æ—á–Ω–æ</h1>
                    <p class="text-secondary mb-3">–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –ú–∞—Å—Å–∏–≤–±—É—Ä–≥ ‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —á–µ–∫-–ª–∏—Å—Ç—ã ‚Ä¢ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</p>
                    <div class="hero-actions">
                        <button class="btn btn-primary" onclick="window.location.hash = '/checklist'">
                            üöÄ –ù–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É
                        </button>
                        <button class="btn btn-secondary" onclick="window.location.hash = '/knowledge-base'">
                            üìñ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ -->
            <div class="desktop-modules-grid">
                <!-- –ë–æ–ª—å—à–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ -->
                <div class="module-card" onclick="window.location.hash = '/documents'">
                    <span class="module-status status-ready">–ì–æ—Ç–æ–≤–æ</span>
                    <div class="module-header">
                        <div class="module-icon">üìã</div>
                        <div class="module-info">
                            <h3>–°–æ—Å—Ç–∞–≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏</h3>
                            <p>7 —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏</p>
                        </div>
                    </div>
                </div>
                
                <!-- –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π -->
                <div class="module-card" onclick="window.location.hash = '/knowledge-base'">
                    <span class="module-status status-ready">–ì–æ—Ç–æ–≤–æ</span>
                    <div class="module-header">
                        <div class="module-icon">üìö</div>
                        <div class="module-info">
                            <h3>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</h3>
                            <p>–ù–æ—Ä–º—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –ì–û–°–¢ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã</p>
                        </div>
                    </div>
                </div>
                
                <!-- –ß–µ–∫-–ª–∏—Å—Ç—ã -->
                <div class="module-card" onclick="window.location.hash = '/checklist'">
                    <span class="module-status status-ready">–ì–æ—Ç–æ–≤–æ</span>
                    <div class="module-header">
                        <div class="module-icon">‚úì</div>
                        <div class="module-info">
                            <h3>–ß–µ–∫-–ª–∏—Å—Ç—ã</h3>
                            <p>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</p>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ -->
            <h2 class="mt-4 mb-3">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏</h2>
            <div class="desktop-special-grid">
                <!-- Wiki -->
                <div class="module-card" onclick="window.location.hash = '/wiki'">
                    <span class="module-status status-beta">Beta</span>
                    <div class="module-header">
                        <div class="module-icon">üìñ</div>
                        <div class="module-info">
                            <h3>Wiki</h3>
                            <p>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∫–æ–º–∞–Ω–¥—ã</p>
                        </div>
                    </div>
                </div>
                
                <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                <div class="module-card" style="opacity: 0.6; cursor: not-allowed;">
                    <span class="module-status status-soon">–°–∫–æ—Ä–æ</span>
                    <div class="module-header">
                        <div class="module-icon">üìä</div>
                        <div class="module-info">
                            <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                            <p>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–æ–∫</p>
                        </div>
                    </div>
                </div>
                
                <!-- AI –ü—Ä–æ–≤–µ—Ä–∫–∞ -->
                <div class="module-card" style="opacity: 0.6; cursor: not-allowed;">
                    <span class="module-status status-soon">–°–∫–æ—Ä–æ</span>
                    <div class="module-header">
                        <div class="module-icon">ü§ñ</div>
                        <div class="module-info">
                            <h3>AI –ü—Ä–æ–≤–µ—Ä–∫–∞</h3>
                            <p>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å LLM</p>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        this.log('Desktop home rendered', 'success');
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
     */
    handleResize() {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –µ—Å–ª–∏ –µ—Å—Ç—å
        if (this.resizeHandler) {
            window.removeEventListener('resize', this.resizeHandler);
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å debounce
        let resizeTimer;
        this.resizeHandler = () => {
            clearTimeout(resizeTimer);
            resizeTimer = setTimeout(() => {
                const isMobile = window.innerWidth < 768;
                const wasMobile = this.elements.homeContainer && 
                                !this.elements.homeContainer.classList.contains('hidden');
                
                // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è —Ç–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ - –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º
                if ((isMobile && !wasMobile) || (!isMobile && wasMobile)) {
                    this.isInitialized = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏
                    this.initHomePage();
                }
            }, 250);
        };
        
        window.addEventListener('resize', this.resizeHandler);
    }
    
    initCarouselEvents() {
        if (!this.elements.storiesHero) return;
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
        const newHero = this.elements.storiesHero.cloneNode(true);
        this.elements.storiesHero.parentNode.replaceChild(newHero, this.elements.storiesHero);
        this.elements.storiesHero = newHero;
        
        let touchStartX = 0;
        let touchEndX = 0;
        
        this.elements.storiesHero.addEventListener('touchstart', (e) => {
            touchStartX = e.touches[0].clientX;
        }, { passive: true });
        
        this.elements.storiesHero.addEventListener('touchend', (e) => {
            touchEndX = e.changedTouches[0].clientX;
            this.handleSwipe(touchStartX - touchEndX);
        }, { passive: true });
    }
    
    handleSwipe(diff) {
        const swipeThreshold = 50;
        
        if (Math.abs(diff) > swipeThreshold) {
            if (diff > 0) {
                this.nextSlide();
            } else {
                this.prevSlide();
            }
        }
    }
    
    initPanelDragging() {
        const panel = this.elements.mainContentPanel;
        if (!panel) return;
        
        // Touch —Å–æ–±—ã—Ç–∏—è
        panel.addEventListener('touchstart', (e) => this.startDrag(e), { passive: false });
        document.addEventListener('touchmove', (e) => this.drag(e), { passive: false });
        document.addEventListener('touchend', (e) => this.endDrag(e), { passive: true });
        
        // Mouse —Å–æ–±—ã—Ç–∏—è (–¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞)
        panel.addEventListener('mousedown', (e) => this.startDrag(e));
        document.addEventListener('mousemove', (e) => this.drag(e));
        document.addEventListener('mouseup', (e) => this.endDrag(e));
        
        // –ö–ª–∏–∫ –Ω–∞ —Ö–µ–¥–µ—Ä "–î–æ–º–æ–π"
        if (this.elements.homeHeader) {
            this.elements.homeHeader.addEventListener('click', () => {
                this.collapsePanel();
            });
        }
    }
    
    startDrag(e) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
        if (e.target.closest('.module-card, .future-card, .search-fab, button')) {
            return;
        }
        
        this.isDragging = true;
        this.startY = e.type === 'touchstart' ? e.touches[0].clientY : e.clientY;
        this.startTop = this.currentTop;
        this.elements.mainContentPanel.classList.add('is-dragging');
    }
    
    drag(e) {
        if (!this.isDragging) return;
        
        e.preventDefault();
        const clientY = e.type === 'touchmove' ? e.touches[0].clientY : e.clientY;
        const deltaY = clientY - this.startY;
        let newTop = this.startTop + deltaY;
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
        newTop = Math.max(this.expandedTop, Math.min(this.collapsedTop, newTop));
        
        this.elements.mainContentPanel.style.top = newTop + 'px';
        this.currentTop = newTop;
    }
    
    endDrag(e) {
        if (!this.isDragging) return;
        
        this.isDragging = false;
        this.elements.mainContentPanel.classList.remove('is-dragging');
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
        if (this.currentTop < this.threshold) {
            this.expandPanel();
        } else {
            this.collapsePanel();
        }
    }
    
    expandPanel() {
        if (!this.elements.mainContentPanel) return;
        
        this.isExpanded = true;
        this.currentTop = this.expandedTop;
        this.elements.mainContentPanel.classList.add('is-expanded');
        
        if (this.elements.storiesHero) {
            this.elements.storiesHero.classList.add('is-hidden');
        }
        
        if (this.elements.homeHeader) {
            this.elements.homeHeader.classList.add('is-visible');
        }
        
        this.elements.mainContentPanel.style.top = this.currentTop + 'px';
        this.stopAutoPlay();
    }
    
    collapsePanel() {
        if (!this.elements.mainContentPanel) return;
        
        this.isExpanded = false;
        this.currentTop = this.collapsedTop;
        this.elements.mainContentPanel.classList.remove('is-expanded');
        
        if (this.elements.storiesHero) {
            this.elements.storiesHero.classList.remove('is-hidden');
        }
        
        if (this.elements.homeHeader) {
            this.elements.homeHeader.classList.remove('is-visible');
        }
        
        this.elements.mainContentPanel.style.top = this.currentTop + 'px';
        // –ù–ï –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫—É
    }
    
    initSearchButton() {
        if (!this.elements.searchFab) return;
        
        this.elements.searchFab.addEventListener('click', () => {
            this.openSearch();
        });
    }
    
    goToSlide(index) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞–Ω–∏—Ü –∏ —Ü–∏–∫–ª–∏—á–Ω–æ—Å—Ç—å
        if (index < 0) {
            index = this.totalSlides - 1;
        } else if (index >= this.totalSlides) {
            index = 0;
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ª–∞–π–¥
        this.currentSlide = index;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        if (!this.elements.storiesCarousel) {
            this.log('Stories carousel not found', 'error');
            return;
        }
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é
        const translateValue = -index * 100;
        this.elements.storiesCarousel.style.transform = `translateX(${translateValue}%)`;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
        if (this.elements.carouselIndicators) {
            const indicators = this.elements.carouselIndicators.querySelectorAll('.carousel-indicator');
            indicators.forEach((ind, i) => {
                ind.classList.toggle('active', i === index);
            });
        }
        
        // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        const currentSlideEl = this.elements.storiesCarousel.querySelector(`[data-slide-index="${index}"]`);
        if (currentSlideEl) {
            const gradient = currentSlideEl.getAttribute('data-slide-gradient');
            this.log(`Slide ${index + 1}/${this.totalSlides} - gradient: ${gradient}`, 'info');
        }
    }
    
    nextSlide() {
        const nextIndex = this.currentSlide + 1;
        this.goToSlide(nextIndex);
    }
    
    prevSlide() {
        const prevIndex = this.currentSlide - 1;
        this.goToSlide(prevIndex);
    }
    
    // –ú–µ—Ç–æ–¥—ã –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∏ (–æ—Ç–∫–ª—é—á–µ–Ω—ã)
    startAutoPlay() {
        if (!this.autoPlayEnabled) return;
        
        this.stopAutoPlay();
        this.autoPlayInterval = setInterval(() => {
            this.nextSlide();
        }, 5000);
    }
    
    stopAutoPlay() {
        if (this.autoPlayInterval) {
            clearInterval(this.autoPlayInterval);
            this.autoPlayInterval = null;
        }
    }

    destroy() {
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –∏ —Å–ª—É—à–∞—Ç–µ–ª–∏
        this.stopAutoPlay();
        
        // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ resize
        if (this.resizeHandler) {
            window.removeEventListener('resize', this.resizeHandler);
        }
        
        // –£–¥–∞–ª—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏
        const styleEl = document.getElementById('stories-slide-fix');
        if (styleEl) {
            styleEl.remove();
        }
        
        // –û—á–∏—â–∞–µ–º DOM
        if (this.elements.homeContainer) {
            this.elements.homeContainer.classList.add('hidden');
        }
        if (this.elements.desktopHomeContainer) {
            this.elements.desktopHomeContainer.classList.add('hidden');
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        this.isInitialized = false;
        
        super.destroy();
    }
    
    openStory(index) {
        const slide = this.data.slides[index];
        this.log(`Opening story: ${slide.title}`);
        
        if (slide.action) {
            switch(slide.action) {
                case 'news':
                    this.showNews();
                    break;
                case 'tips':
                    this.showTips();
                    break;
                case 'stats':
                    this.app.router.navigate('/statistics');
                    break;
                case 'team':
                    this.showTeam();
                    break;
            }
        }
    }
    
    openSearch() {
        this.log('Opening search');
        alert('–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
    }
    
    showNews() {
        alert('–ù–æ–≤–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
    }
    
    showTips() {
        alert('–°–æ–≤–µ—Ç—ã –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
    }
    
    showTeam() {
        alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
    }
    
    getPublicMethods() {
        return {
            goToSlide: (index) => this.goToSlide(index),
            openStory: (index) => this.openStory(index),
            expandPanel: () => this.expandPanel(),
            collapsePanel: () => this.collapsePanel(),
            initHomePage: () => this.initHomePage(),
            renderDesktopHome: () => this.renderDesktopHome(),
            stopAutoPlay: () => this.stopAutoPlay()
        };
    }
}
